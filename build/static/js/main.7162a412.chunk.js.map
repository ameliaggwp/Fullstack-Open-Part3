{"version":3,"sources":["services/numbers.js","components/NumbersList.js","components/Form.js","components/Input.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","process","MONGODB_URI","axios","get","then","response","data","newObject","post","id","delete","put","PhonebookEntry","props","name","number","onClick","handleClick","NumbersList","persons","newSearch","handleDelete","list","i","length","toLowerCase","includes","push","map","person","key","Form","title","onSubmit","children","type","Input","inputTitle","value","onChange","Notification","message","classStyle","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewSearch","notification","setNotification","errorNotification","setErrorNotification","useEffect","numberService","initialNumbers","event","target","preventDefault","personObject","newPerson","concat","setTimeout","selectedPerson","changedPerson","window","confirm","updatedPerson","catch","error","filter","p","personData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7162a412.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = process.env.MONGODB_URI;\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst removeEntry = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, removeEntry, update };\r\n","import React from \"react\";\r\n\r\nconst PhonebookEntry = (props) => {\r\n  return (\r\n    <div>\r\n      {props.name} {props.number}{\" \"}\r\n      <button onClick={() => props.handleClick(props)}>delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NumbersList = ({ persons, newSearch, handleDelete }) => {\r\n  const list = [];\r\n\r\n  //For filtering numbers listed\r\n  if (newSearch) {\r\n    for (let i = 0; i < persons.length; i++) {\r\n      if (persons[i].name.toLowerCase().includes(newSearch.toLowerCase())) {\r\n        list.push(persons[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        {list.map((person) => (\r\n          <div key={person.id}>\r\n            {person.name} {person.number}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // For listing all numbers in database\r\n  return (\r\n    <div>\r\n      {persons.map((person) => (\r\n        <div key={person.id}>\r\n          <PhonebookEntry\r\n            name={person.name}\r\n            number={person.number}\r\n            id={person.id}\r\n            handleClick={handleDelete}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumbersList;\r\n","import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>{props.title}</h2>\r\n      <form onSubmit={props.onSubmit}>\r\n        {props.children}\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <div>\r\n      {props.inputTitle} <input value={props.value} onChange={props.onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, classStyle }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={classStyle}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport numberService from \"./services/numbers\";\nimport NumbersList from \"./components/NumbersList\";\nimport Form from \"./components/Form\";\nimport Input from \"./components/Input\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newSearch, setNewSearch] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [errorNotification, setErrorNotification] = useState(null);\n\n  useEffect(() => {\n    numberService.getAll().then((initialNumbers) => {\n      setPersons(initialNumbers);\n    });\n  }, []);\n\n  //Add person\n  const addName = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    //If there is no data in database\n    if (persons.length === 0) {\n      numberService.create(personObject).then((newPerson) => {\n        setPersons(persons.concat(newPerson));\n        setNotification(`Added ${newPerson.name}`);\n        setTimeout(() => {\n          setNotification(null);\n        }, 3000);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n\n    for (let i = 0; i < persons.length; i++) {\n      if (persons[i].name === personObject.name) {\n        // If a repeat name is entered\n        const selectedPerson = persons[i];\n        const changedPerson = {\n          ...selectedPerson,\n          number: personObject.number,\n        };\n        if (\n          window.confirm(\n            `${selectedPerson.name} is already added to phonebook, replace the old number with a new one?`\n          )\n        ) {\n          numberService\n            .update(selectedPerson.id, changedPerson)\n            .then((updatedPerson) => {\n              setPersons(\n                persons.map((person) =>\n                  person.id !== selectedPerson.id ? person : updatedPerson\n                )\n              );\n              setNotification(`Updated ${changedPerson.name}`);\n              setTimeout(() => {\n                setNotification(null);\n              }, 3000);\n              setNewName(\"\");\n              setNewNumber(\"\");\n            })\n            .catch((error) => {\n              setErrorNotification(\n                `${selectedPerson.name} has already been removed from the server`\n              );\n              setTimeout(() => {\n                setErrorNotification(null);\n              }, 3000);\n              setPersons(persons.filter((p) => p.id !== selectedPerson.id));\n            });\n        }\n        break;\n      }\n      //Add new name and number to phonebook\n      numberService.create(personObject).then((personData) => {\n        setPersons(persons.concat(personData));\n        setNotification(`Added ${personObject.name}`);\n        setTimeout(() => {\n          setNotification(null);\n        }, 3000);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value);\n  };\n\n  const handleDelete = ({ id, name }) => {\n    if (window.confirm(`Delete ${name}`)) {\n      numberService.removeEntry(id);\n      setPersons(persons.filter((p) => p.id !== id));\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorNotification} classStyle=\"error\" />\n      <Notification message={notification} classStyle=\"success\" />\n      <div>\n        <Input\n          inputTitle=\"filter names\"\n          value={newSearch}\n          onChange={handleSearch}\n        />\n      </div>\n\n      <Form title=\"Add New\" onSubmit={addName}>\n        <Input inputTitle=\"Name\" value={newName} onChange={handleNameChange} />\n        <Input\n          inputTitle=\"Number\"\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </Form>\n      <h2>Numbers</h2>\n      {!persons ? (\n        <div>Loading...</div>\n      ) : (\n        <NumbersList\n          persons={persons}\n          newSearch={newSearch}\n          handleDelete={handleDelete}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}